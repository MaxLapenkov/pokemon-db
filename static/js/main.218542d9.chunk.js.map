{"version":3,"sources":["components/error-indicator/picachu-error.png","components/header/index.js","components/header/header.js","services/pokeapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/random-item/item-view.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-item/random-item.js","components/random-item/index.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/row/index.js","components/row/row.js","components/item-details/item-details.js","components/item-details/index.js","components/hoc-helpers/with-data.js","components/pokeapi-service-context/pokeapi-service-context.js","components/hoc-helpers/with-pokeapi-service.js","components/hoc-helpers/compose.js","components/hoc-helpers/with-child-function.js","components/poke-components/pokemon-details.js","components/poke-components/thing-details.js","components/poke-components/location-details.js","components/item-list/item-list.js","components/item-list/index.js","components/poke-components/item-lists.js","components/pages/pokemon-page.js","components/pages/location-page.js","components/pages/thing-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","Header","changePage","e","pages","document","getElementsByName","onChangePage","props","target","value","i","length","className","name","onClick","this","Component","PokeapiService","_apiBase","getAllPokemons","a","getResource","res","results","map","_transformPokemons","getPokemon","id","pokemon","_transformPokemon","getAllItems","_transformItems","getItem","item","_transformItem","getAllLocations","_transformLocations","getLocation","loc","_transformLocation","_extractId","url","match","cost","category","sprite","sprites","default","location","area","areas","region","experience","base_experience","weight","height","front_default","fetch","ok","Error","status","json","Spinner","ItemView","Fragment","alt","src","ErrorIndicator","icon","width","RandomItem","swapiService","state","loading","error","onItemLoaded","setState","onError","updateItem","Math","floor","random","then","catch","updateInterval","interval","setInterval","clearInterval","hasData","errorMessage","spinner","content","defaultProps","ErrorBoundary","hasError","children","Row","left","right","Record","field","label","ItemDetails","pokeapiservice","onItemLoading","prevProps","itemId","getData","React","Children","child","cloneElement","withData","View","data","update","createContext","PokeapiServiceProvider","Provider","PokeapiServiceConsumer","Consumer","withPokeapiService","mapMethodsToProps","Wrapped","pokeapiService","serviceProps","compose","funcs","comp","reduceRight","prevResult","f","withChildFunction","fn","ItemList","onItemSelected","renderLabel","items","key","renderName","PokemonList","ThingList","LocationList","PokemonPage","selectedPokemon","onPokemonSelected","itemList","pokemonDetails","LocationPage","selectedThing","onThingSelected","thingDetails","ThingPage","App","toggle","page","toggleItem","newState","randItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.218542d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picachu-error.135dd484.png\";","import Header from './header'\r\nexport default Header","import React, {Component} from 'react'\r\n\r\nimport './header.css';\r\n\r\nexport default class Header extends Component {\r\n\r\n    changePage = (e) => {\r\n        let pages = document.getElementsByName('page')\r\n\r\n        const {onChangePage} = this.props\r\n\r\n        onChangePage(e.target.value)\r\n        \r\n\r\n        for(let i = 0; i< pages.length; i++) {\r\n            pages[i].className = \"\"\r\n          }\r\n\r\n        e.target.className = \"active\"\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"header navbar-collapse d-flex flex-row justify-content-around\">\r\n                <h1>Pokemon DB</h1> \r\n                <ul className=\"navbar-nav d-flex flex-row\"\r\n                value = \"ul\">\r\n                    <button\r\n                        value=\"pokemon\"\r\n                        name=\"page\"\r\n                        onClick={this.changePage}>Pokemons</button>\r\n                    <button\r\n                        value=\"thing\"\r\n                        name=\"page\"\r\n                        onClick={this.changePage}>Items</button>\r\n                    <button\r\n                        value=\"location\"\r\n                        name=\"page\"\r\n                        onClick={this.changePage}>Locations</button>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\n"," export default class PokeapiService {\r\n\r\n    _apiBase = 'https://pokeapi.co/api/v2'\r\n  \r\n     async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n      \r\n        if(!res.ok) {\r\n          throw new Error(`Could not fetch ${url}, received ${res.status}`)\r\n        }\r\n        return await res.json()\r\n        \r\n     }\r\n  \r\n      getAllPokemons = async () =>  {\r\n       const res = await this.getResource(`/pokemon/`);\r\n       return res.results.map(this._transformPokemons);\r\n     }\r\n      getPokemon = async (id) =>   {\r\n       const pokemon = await this.getResource(`/pokemon/${id}/`)\r\n       \r\n       \r\n       \r\n       return this._transformPokemon(pokemon);\r\n       \r\n     }\r\n     getAllItems = async () => {\r\n       \r\n       \r\n      const res = await this.getResource(`/item/`);\r\n     \r\n      \r\n      return res.results.map(this._transformItems);\r\n    }\r\n     getItem = async (id) => {\r\n      const item = await this.getResource(`/item/${id}/`) \r\n      return this._transformItem(item);\r\n    }\r\n    getAllLocations = async () => {\r\n      const res = await this.getResource(`/location/`);\r\n      return res.results.map(this._transformLocations)\r\n    }\r\n    getLocation = async (id) => {\r\n      const loc = await this.getResource(`/location/${id}/`)\r\n      return this._transformLocation(loc);\r\n    }\r\n    _extractId = (item) =>  {\r\n      const idRegExp = /\\/([0-9]*)\\/$/;\r\n      return item.url.match(idRegExp)[1];\r\n    }\r\n\r\n    _transformItem = (item) =>  {      \r\n      return {\r\n        id: item.id,\r\n        name: item.name,\r\n        cost: item.cost,\r\n        category: item.category.name,\r\n        sprite: item.sprites.default\r\n        \r\n    }\r\n    }\r\n    _transformItems = (item) => {  \r\n      \r\n          \r\n      return {\r\n        id: this._extractId(item),\r\n        name: item.name,\r\n        \r\n    }\r\n    }\r\n    _transformLocation = (location) => {      \r\n      return {\r\n        id: location.id,\r\n        name: location.name,\r\n        area: location.areas[0].name,\r\n        region: location.region.name,\r\n        sprite: 'https://www.pngrepo.com/png/276269/180/location-pokemon.png'\r\n    }   \r\n    }\r\n    _transformLocations = (loc) => {      \r\n      return {\r\n        id: this._extractId(loc),\r\n        name: loc.name,\r\n    }\r\n    }\r\n    _transformPokemons = (pokemon) => {    \r\n      return {\r\n        id: this._extractId(pokemon),\r\n        name: pokemon.name,\r\n    }\r\n    }\r\n    _transformPokemon = (pokemon) => {\r\n      return {\r\n        id: pokemon.id,\r\n        name: pokemon.name,\r\n        experience: pokemon.base_experience,\r\n        weight: pokemon.weight,\r\n        height: pokemon.height,\r\n        sprite: pokemon.sprites.front_default\r\n      }\r\n    }\r\n  }","import Spinner from './spinner'\r\nexport default Spinner","import React from 'react'\r\n\r\nimport './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n    <div className=\"bg-primary spinner\">\r\n        <div className=\"loadingio-spinner-double-ring-w8zdl9yb5ul\"><div className=\"ldio-kuzijtqhgsl\">\r\n    <div></div>\r\n    <div></div>\r\n    <div><div></div></div>\r\n    <div><div></div></div>\r\n    </div></div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Spinner","import React from 'react'\r\nimport './random-item.css'\r\n\r\nconst ItemView = ({item}) => {\r\n    const {name, cost, category, sprite} = item;\r\n    return (\r\n            <React.Fragment>\r\n                <img className=\"item-image\" alt=\"Item\" src={sprite}/>\r\n                <div className=\"item-description\">\r\n                    <h2 className=\"description-title\">{name}</h2>\r\n                    <ul className=\"description-list\">\r\n                        <li><span className=\"term\">Cost: </span> <span>{cost}</span></li>\r\n                        <li><span className=\"term\">Category: </span> <span>{category}</span></li>\r\n                        \r\n                        {/* <li><span className=\"term\">Diameter</span> <span>{diameter}</span></li> */}\r\n                    </ul>\r\n                </div>\r\n            </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ItemView;","import ErrorIndicator from './error-indicator'\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css'\r\nimport icon from './picachu-error.png';\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <img src={icon} alt=\"error-icon\" width=\"64\"/>\r\n            <span className=\"boom\">BOOM!<br/> Something has gone wrong</span>\r\n            <span>It will be fixed soon</span>\r\n        </div>\r\n    )\r\n}\r\nexport default ErrorIndicator;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport Spinner from '../spinner'\r\nimport ItemView from './item-view'\r\nimport ErrorIndicator from '../error-indicator/'\r\nimport './random-item.css';\r\n\r\nexport default class RandomItem extends Component {\r\n\r\n    swapiService = new PokeapiService();\r\n\r\n    static defaultProps = {\r\n        updateInterval: 3000\r\n    }\r\n    static propTypes = {\r\n        updateInterval: PropTypes.number\r\n    }\r\n    state = {\r\n        item: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n    componentDidMount() {\r\n        const {updateInterval} = this.props\r\n        this.updateItem();\r\n        this.interval = setInterval(this.updateItem, updateInterval)  \r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    onItemLoaded = (item) => {\r\n        this.setState({\r\n            item,\r\n            loading: false})\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({error: true, loading: false});\r\n    }\r\n\r\n    updateItem = () => {   \r\n        const id = Math.floor(Math.random()*20) + 2;\r\n        this.swapiService\r\n            .getItem(id)\r\n            .then(this.onItemLoaded) \r\n            .catch(this.onError)      \r\n    }\r\n\r\n    \r\n    render() {\r\n        const {item, loading, error} = this.state;\r\n\r\n        const hasData = !(loading || error)\r\n\r\n        const errorMessage = error ? <ErrorIndicator /> : null;\r\n        const spinner = loading ? <Spinner /> : null\r\n        const content = hasData ? <ItemView item={item}/> : null\r\n        \r\n        if(loading) {\r\n            return <Spinner />\r\n        }\r\n        \r\n        return(\r\n            <div className=\"random-item bg-primary \">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\n","import RandomItem from './random-item'\r\nexport default RandomItem;","import ErrorBoundary from './error-boundary'\r\nexport default ErrorBoundary","import React, {Component} from 'react'\r\nimport ErrorIndicator from '../error-indicator/'\r\nimport './error-boundary.css'\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state ={\r\n        hasError: false\r\n    }\r\n        componentDidCatch() {\r\n            this.setState({hasError: true})    \r\n        }\r\n    \r\n        render() {\r\n            if(this.state.hasError) {\r\n                return <ErrorIndicator />\r\n            }\r\n            return this.props.children;\r\n        }\r\n}","import Row from './row'\r\nexport default Row","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './row.css'\r\nconst Row = ({left, right}) => {\r\n    return(\r\n        <div className=\"row mb2\">\r\n            <div className=\"col-md-6\">\r\n                {left}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                {right}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nRow.propTypes = {\r\n    left: PropTypes.node,\r\n    right: PropTypes.node\r\n}\r\nexport default Row","import React, { Component } from 'react'\r\n\r\nimport './item-details.css';\r\nimport PokeapiService from '../../services/pokeapi-service';\r\nimport Spinner from '../spinner'\r\nimport ErrorIndicator from '../error-indicator/'\r\n\r\nconst Record = ({item, field, label}) => {\r\n    return ( \r\n           <li>{label}: {item[field]}</li>\r\n    );\r\n}\r\nexport {\r\n    Record\r\n}\r\nexport default class ItemDetails extends Component {\r\n\r\n    pokeapiservice = new PokeapiService()\r\n\r\n    state = {\r\n        item: null,\r\n        hasData: false,\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        \r\n        this.updateItem();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.itemId !== prevProps.itemId) {\r\n            this.updateItem()\r\n        } \r\n        \r\n    }\r\n    onItemLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n    onItemLoaded = (item) => {   \r\n        this.setState({\r\n            item,\r\n            loading: false})\r\n    }\r\n    updateItem() {\r\n        const {itemId, getData} = this.props;\r\n        if(!itemId) {\r\n            return;\r\n        }\r\n        this.onItemLoading();\r\n        getData(itemId)\r\n            .then(this.onItemLoaded)\r\n            .catch(this.onError) \r\n    }\r\n    onError = () => {\r\n        this.setState({error: true, loading: false});\r\n    }\r\n\r\n    render() {\r\n   \r\n        const {item, loading, error} = this.state;\r\n\r\n        if(!item || loading) {\r\n            return (\r\n                <Spinner />\r\n            )\r\n        }\r\n        if(error) {\r\n            return(\r\n                <ErrorIndicator />\r\n            )\r\n        }\r\n        const {name, sprite} = item\r\n        return(\r\n            <div className=\"item-details bg-primary d-flex\">\r\n            <div className=\"item-image\">\r\n                <img alt=\"item\" width=\"150\" height =\"150\" src={sprite}/>\r\n            </div>\r\n            <div className=\"item-description\">\r\n                <h2 className=\"description-title\">{name}</h2>\r\n                <ul className=\"description-list\">\r\n                {\r\n                React.Children.map(this.props.children, (child) => {\r\n                    return React.cloneElement(child,{ item })\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n","import ItemDetails, {Record} from './item-details'\r\nexport {\r\n    Record\r\n}\r\nexport default ItemDetails;","import React, {Component} from 'react'\r\nimport Spinner from '../spinner/'\r\nimport ErrorIndicator from '../error-indicator'\r\n\r\nconst withData = (View) => {\r\n    return class extends Component{\r\n    state ={\r\n        data: null,\r\n        loading: true,\r\n        error: false\r\n    }\r\n    componentDidMount() {\r\n        this.update()     \r\n    }\r\n\r\n    update() {\r\n\r\n        this.setState({\r\n            loading: true,\r\n            error: false\r\n        })\r\n\r\n        this.props.getData()\r\n        .then((data) => {          \r\n            this.setState({\r\n                data,\r\n                loading: false                \r\n            })\r\n            \r\n        })\r\n        .catch(() => {\r\n            this.setState({\r\n                loading: false,\r\n                error: true\r\n            })\r\n        }) \r\n    }\r\n\r\n    render() {\r\n            const {data, loading, error} = this.state;\r\n        \r\n            if(loading) {\r\n                return <Spinner />\r\n            }\r\n            if(error) {\r\n                return <ErrorIndicator />\r\n            }\r\n            return <View {...this.props} data={data} />\r\n        }\r\n    };\r\n}\r\n\r\nexport default withData","import React from 'react'\r\n\r\n\r\n\r\n\r\nconst {\r\n    Provider : PokeapiServiceProvider,\r\n    Consumer : PokeapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    PokeapiServiceProvider,\r\n    PokeapiServiceConsumer\r\n}","import React from 'react'\r\nimport {PokeapiServiceConsumer} from '../pokeapi-service-context/'\r\n\r\nconst withPokeapiService = (mapMethodsToProps) => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n        <PokeapiServiceConsumer>\r\n            {\r\n                (pokeapiService) => {\r\n\r\n                    const serviceProps = mapMethodsToProps(pokeapiService)\r\n                    return (\r\n                        <Wrapped {...props} {...serviceProps}/>\r\n                    )\r\n                }\r\n            }\r\n        </PokeapiServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withPokeapiService","\r\n\r\nconst compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight((prevResult, f) => {\r\n        return f(prevResult)\r\n    }, comp)\r\n}\r\n\r\nexport default compose","import React from 'react'\r\n\r\nconst withChildFunction = (fn) => (Wrapped) => {\r\n    return (props) => {\r\n        return (    \r\n            <Wrapped {...props}>\r\n                {fn}\r\n            </Wrapped>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withChildFunction","\r\nimport React from 'react'\r\nimport ItemDetails, {Record} from '../item-details/';\r\nimport {withPokeapiService} from '../hoc-helpers/'\r\nconst PokemonDetails = (props) => {\r\n                return (\r\n                    <ItemDetails {...props}>\r\n                        <Record field=\"name\" label=\"Name\" />\r\n                        <Record field=\"height\" label=\"Height\" />\r\n                        <Record field=\"weight\" label=\"Weight\" />\r\n                        <Record field=\"experience\" label=\"Experience\" />\r\n                    </ItemDetails>\r\n                )\r\n};\r\n\r\nconst mapMethodsToProps = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getPokemon\r\n    }\r\n}\r\n\r\nexport default withPokeapiService(mapMethodsToProps)(PokemonDetails)","\r\nimport React from 'react'\r\nimport ItemDetails, {Record} from '../item-details/';\r\nimport {withPokeapiService} from '../hoc-helpers/'\r\nconst ThingDetails = (props) => {\r\n    \r\n    return (\r\n                <ItemDetails {...props}>\r\n                    <Record field=\"cost\" label=\"Cost\" />\r\n                    <Record field=\"category\" label=\"Category\" />  \r\n                </ItemDetails>\r\n                )\r\n};\r\n\r\nconst mapMethodsToProps = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getItem\r\n    }\r\n}\r\n\r\nexport default withPokeapiService(mapMethodsToProps)(ThingDetails)","\r\nimport React from 'react'\r\nimport ItemDetails, {Record} from '../item-details/';\r\nimport {withPokeapiService} from '../hoc-helpers/'\r\nconst LocationDetails = (props) => {\r\n    return (\r\n                <ItemDetails {...props}>\r\n                    <Record field=\"area\" label=\"Area\" />\r\n                    <Record field=\"region\" label=\"Region\" />  \r\n                </ItemDetails>\r\n                )\r\n};\r\n\r\nconst mapMethodsToProps = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getLocation\r\n    }\r\n}\r\n\r\nexport default withPokeapiService(mapMethodsToProps)(LocationDetails)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './item-list.css'\r\n\r\nconst ItemList = (props) =>  {\r\n\r\n    const {data, onItemSelected, children: renderLabel}  = props\r\n\r\n    const items = data.map((item) => {\r\n    const { id } = item\r\n    const label = renderLabel(item)\r\n        return (\r\n            <li className=\"list-group-item\"\r\n             key={id}\r\n            onClick={() => onItemSelected(id)}>{label}</li>\r\n            )\r\n        })\r\n        return(\r\n            <div className=\"item-list\">\r\n                <ul className=\"list-group \">\r\n                    {items}\r\n                </ul>\r\n            </div>\r\n        )\r\n          \r\n};\r\nItemList.defaultProps = {\r\n    onItemSelected: () => {}\r\n}\r\nItemList.propTypes = {\r\n    onItemSelected: PropTypes.func,\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    children: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ItemList","import ItemList from './item-list'\r\nexport default ItemList","import React from 'react'\r\nimport ItemList from '../item-list'\r\nimport {withData, withPokeapiService, compose, withChildFunction} from '../hoc-helpers/'\r\n\r\n\r\nconst renderName = ({name}) => <span>{name}</span>;\r\n\r\nconst mapPokemonMethodsToProps = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getAllPokemons\r\n    }\r\n}\r\nconst mapItemMethodsToProps = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getAllItems\r\n    }\r\n}\r\nconst mapLocationMethodsToProps = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getAllLocations\r\n    }\r\n}\r\n\r\n\r\n\r\nconst PokemonList = compose(\r\n    withPokeapiService(mapPokemonMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderName)\r\n)(ItemList);\r\n\r\nconst ThingList = compose(\r\n    withPokeapiService(mapItemMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderName)\r\n)(ItemList);\r\n\r\nconst LocationList = compose(\r\n    withPokeapiService(mapLocationMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderName)\r\n)(ItemList);\r\n\r\nexport {\r\n    PokemonList,\r\n    ThingList,\r\n    LocationList\r\n}","import React, {Component} from 'react'\r\nimport './pages.css'\r\nimport ErrorIndicator from '../error-indicator/'\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport ErrorBoundary from '../error-boundary/'\r\nimport Row from '../row/'\r\nimport  {\r\n    PokemonDetails,\r\n    PokemonList,\r\n} from '../poke-components/'\r\n\r\n\r\nexport default class PokemonPage extends Component {\r\n\r\n    pokeapiService = new PokeapiService()\r\n\r\n    state = {\r\n        selectedPokemon: null,\r\n    }\r\n\r\n    onPokemonSelected = (id) => {\r\n        this.setState ({\r\n            selectedPokemon: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        if(this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        const itemList = (\r\n            <ErrorBoundary>\r\n\r\n            <PokemonList  onItemSelected = {this.onPokemonSelected}/>\r\n            \r\n            </ErrorBoundary>\r\n        )\r\n        \r\n        \r\n\r\n        const pokemonDetails = (\r\n            <ErrorBoundary>\r\n\r\n            <PokemonDetails itemId={this.state.selectedPokemon}/>\r\n                \r\n            </ErrorBoundary>\r\n        )\r\n        if(!this.state.selectedPokemon) {\r\n            return <Row left ={itemList} right = {<span>Choose pokemon</span>} />\r\n        }  \r\n        return (\r\n            \r\n            <Row left ={itemList} right = {pokemonDetails} />\r\n            \r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport './pages.css'\r\nimport ErrorIndicator from '../error-indicator/'\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport ErrorBoundary from '../error-boundary/'\r\nimport Row from '../row/'\r\nimport  {\r\n    LocationDetails,\r\n    LocationList,\r\n} from '../poke-components/'\r\n\r\n\r\nexport default class LocationPage extends Component {\r\n\r\n    pokeapiService = new PokeapiService()\r\n\r\n    state = {\r\n        selectedThing: null,\r\n    }\r\n\r\n    onThingSelected = (id) => {\r\n        this.setState ({\r\n            selectedThing: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        if(this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        const itemList = (\r\n            <ErrorBoundary>\r\n\r\n            <LocationList  onItemSelected = {this.onThingSelected}/>\r\n            \r\n            </ErrorBoundary>\r\n        )\r\n        \r\n        \r\n\r\n        const thingDetails = (\r\n            <ErrorBoundary>\r\n\r\n            <LocationDetails itemId={this.state.selectedThing}/>\r\n                \r\n            </ErrorBoundary>\r\n        )\r\n        if(!this.state.selectedThing) {\r\n            return <Row left ={itemList} right = {<span>Choose location</span>} />\r\n        }  \r\n        return (\r\n            \r\n            <Row left ={itemList} right = {thingDetails} />\r\n            \r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport './pages.css'\r\nimport ErrorIndicator from '../error-indicator/'\r\nimport PokeapiService from '../../services/pokeapi-service'\r\nimport ErrorBoundary from '../error-boundary/'\r\nimport Row from '../row/'\r\nimport  {\r\n    ThingDetails,\r\n    ThingList,\r\n} from '../poke-components/'\r\n\r\n\r\nexport default class ThingPage extends Component {\r\n\r\n    pokeapiService = new PokeapiService()\r\n\r\n    state = {\r\n        selectedThing: null,\r\n    }\r\n\r\n    onThingSelected = (id) => {\r\n        this.setState ({\r\n            selectedThing: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        if(this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        const itemList = (\r\n            <ErrorBoundary>\r\n\r\n            <ThingList  onItemSelected = {this.onThingSelected}/>\r\n            \r\n            </ErrorBoundary>\r\n        )\r\n        \r\n        \r\n\r\n        const thingDetails = (\r\n            <ErrorBoundary>\r\n\r\n            <ThingDetails itemId={this.state.selectedThing}/>\r\n                \r\n            </ErrorBoundary>\r\n        )\r\n        if(!this.state.selectedThing) {\r\n            return <Row left ={itemList} right = {<span>Choose item</span>} />\r\n        }  \r\n        return (\r\n            \r\n            <Row left ={itemList} right = {thingDetails} />\r\n            \r\n        )\r\n    }\r\n}","import App from './app'\r\nexport default App","import React, {Component} from 'react';\r\nimport './app.css'\r\nimport Header from '../header/'\r\nimport RandomItem from '../random-item/'\r\nimport ErrorIndicator from '../error-indicator/'\r\nimport ErrorBoundary from '../error-boundary/'\r\nimport{\r\n    PokemonPage,\r\n    ThingPage,\r\n    LocationPage\r\n} from '../pages/'\r\nimport {PokeapiServiceProvider} from '../pokeapi-service-context/'\r\nimport PokeapiService from '../../services/pokeapi-service';\r\n\r\nexport default class App extends Component {\r\n\r\n    pokeapiService = new PokeapiService();\r\n    state = {\r\n        toggle: true,\r\n        hasError: false,\r\n        page: ''\r\n    }\r\n    toggleItem = () => {\r\n        let newState = !this.state.toggle;\r\n        this.setState({\r\n            toggle: newState\r\n        })\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})    \r\n    }\r\n\r\n    changePage = (page) => {\r\n        this.setState({page});\r\n      }\r\n    render() {\r\n\r\n        if(this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        const {toggle, page} = this.state;\r\n        const randItem = toggle ? <RandomItem updateInterval={5000}/> : null;\r\n\r\n        let content = null;\r\n       \r\n        if(page === 'pokemon') {\r\n            content = <PokemonPage /> \r\n        } else if (page === 'thing') {\r\n            content = <ThingPage />\r\n        } else if (page === 'location') {\r\n            content = <LocationPage />\r\n        } else {\r\n            content = null\r\n        }\r\n       \r\n       \r\n\r\n\r\n            return(\r\n                <ErrorBoundary>\r\n                <PokeapiServiceProvider value={this.pokeapiService}>\r\n                <div className=\"star-db\">\r\n                    <Header \r\n                    onChangePage = {this.changePage}/>\r\n                    {randItem}\r\n                    <button className=\"toggle\" onClick={this.toggleItem}>Toggle random item</button>\r\n                    {content}     \r\n                </div>\r\n                </PokeapiServiceProvider>\r\n                </ErrorBoundary> \r\n            )\r\n        \r\n        \r\n        \r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/'\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}